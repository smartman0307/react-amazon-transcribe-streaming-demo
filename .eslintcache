[{"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/constants/site.constants.ts":"1","/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/app/wrappers/index.ts":"2","/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/app/wrappers/box.tsx":"3","/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/App.tsx":"4","/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/ui-components/Heading.tsx":"5","/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/app/builders/index.tsx":"6","/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/ui-components/DynamicTranscribeForm/index.tsx":"7","/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/ui-components/DynamicTranscribeForm/utils.tsx":"8","/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/constants/transcribe.constants.ts":"9","/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/hooks/use-transcribe-config.ts":"10","/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/store/transcribe-config.tsx":"11"},{"size":1275,"mtime":1611329970192,"results":"12","hashOfConfig":"13"},{"size":367,"mtime":1611314806580,"results":"14","hashOfConfig":"13"},{"size":342,"mtime":1611321395940,"results":"15","hashOfConfig":"13"},{"size":765,"mtime":1611315191422,"results":"16","hashOfConfig":"13"},{"size":274,"mtime":1611315151766,"results":"17","hashOfConfig":"13"},{"size":670,"mtime":1611321245555,"results":"18","hashOfConfig":"13"},{"size":1694,"mtime":1611342864812,"results":"19","hashOfConfig":"20"},{"size":1634,"mtime":1611342993909,"results":"21","hashOfConfig":"20"},{"size":201,"mtime":1611331694021,"results":"22","hashOfConfig":"13"},{"size":232,"mtime":1611330655203,"results":"23","hashOfConfig":"13"},{"size":718,"mtime":1611339731470,"results":"24","hashOfConfig":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"25scz7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wgi6q2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/constants/site.constants.ts",[],"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/app/wrappers/index.ts",[],"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/app/wrappers/box.tsx",[],"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/App.tsx",[],"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/ui-components/Heading.tsx",[],"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/app/builders/index.tsx",[],"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/ui-components/DynamicTranscribeForm/index.tsx",["48"],"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/components/ui-components/DynamicTranscribeForm/utils.tsx",[],"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/constants/transcribe.constants.ts",[],"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/hooks/use-transcribe-config.ts",[],"/Users/Muhammad.qasim/development-workspace/experiments/react-stories/amazon-transcribe-demo/src/store/transcribe-config.tsx",["49"],"/* eslint-disable @typescript-eslint/indent */\nimport * as React from 'react';\nimport transcribeConfig from '../constants/transcribe.constants';\n\ntype TranscribeContext = [\n  typeof transcribeConfig,\n  React.Dispatch<React.SetStateAction<typeof transcribeConfig>> | (() => {}),\n];\n\nexport const TranscribeConfigContext = React.createContext<TranscribeContext>([\n  transcribeConfig,\n  () => {},\n]);\n\nconst TranscribeConfigProvider: React.FC<{}> = ({ children }) => {\n  const transcribeConfigHook = React.useState(transcribeConfig);\n\n  return (\n    <TranscribeConfigContext.Provider value={transcribeConfigHook}>\n      {children}\n    </TranscribeConfigContext.Provider>\n  );\n};\n\nexport default TranscribeConfigProvider;\n",{"ruleId":"50","severity":1,"message":"51","line":23,"column":7,"nodeType":"52","messageId":"53","endLine":23,"endColumn":18},{"ruleId":null,"fatal":true,"severity":2,"message":"54","line":7,"column":65},"no-console","Unexpected console statement.","MemberExpression","unexpected","Parsing error: Function type notation must be parenthesized when used in a union type."]